// Generated by CoffeeScript 1.6.2
(function() {
  var ChunnelClient, EventEmitter, crypto,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require("events").EventEmitter;

  crypto = require("crypto");

  ChunnelClient = (function(_super) {
    __extends(ChunnelClient, _super);

    /*
    */


    function ChunnelClient(socket, _domain) {
      this.socket = socket;
      this._domain = _domain;
      ChunnelClient.__super__.constructor.call(this);
      this.secret = crypto.createHash('md5').update(String(Date.now() + Math.random())).digest("hex");
      this._connectionQueue = [];
      this._listen();
    }

    /*
    */


    ChunnelClient.prototype.getConnection = function(callback) {
      this._connectionQueue.push(callback);
      return this.socket.send("getConnection");
    };

    /*
    */


    ChunnelClient.prototype.addConnection = function(connection, secret) {
      var _ref;

      if (secret !== this.secret) {
        return this.socket.error(new Error("cannot add connection - secret doesn't match"));
      }
      return (_ref = this._connectionQueue.shift()) != null ? _ref.call(this, null, connection) : void 0;
    };

    /*
    */


    ChunnelClient.prototype._listen = function() {
      var _this = this;

      return this.socket.connection.once("close", function() {
        return _this.emit("close");
      });
    };

    return ChunnelClient;

  })(EventEmitter);

  module.exports = ChunnelClient;

}).call(this);
