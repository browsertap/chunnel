// Generated by CoffeeScript 1.6.2
(function() {
  var Client, EventEmitter, Server, net, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  net = require("net");

  EventEmitter = require("events").EventEmitter;

  Client = require("./client");

  Server = (function(_super) {
    __extends(Server, _super);

    function Server() {
      this._onConnection = __bind(this._onConnection, this);      _ref = Server.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    Server.prototype.listen = function(port) {
      return this._server = net.createServer(this._onConnection).listen(port);
    };

    /*
    */


    Server.prototype.close = function() {
      return this._server.close();
    };

    /*
    */


    Server.prototype._onConnection = function(con) {
      var client,
        _this = this;

      client = new Client(con);
      return client.routeOnce(function(message) {
        return _this.emit(message.name, message.data, client);
      });
    };

    return Server;

  })(EventEmitter);

  module.exports = Server;

}).call(this);
